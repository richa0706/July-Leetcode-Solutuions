//3 July

class Solution {
public:
    bool buddyStrings(string s, string goal) {
        int n = s.size();
        
        // Step 1
        if (n != goal.size()) {
            return false;
        }
        
        // Step 2
        if (s == goal) {
            unordered_set<char> charSet(s.begin(), s.end());
            return charSet.size() < n;
        }
        
        // Step 3
        int first = -1;
        int second = -1;
        
        // Step 4
        for (int i = 0; i < n; i++) {
            if (s[i] != goal[i]) {
                if (first == -1) {
                    first = i;
                } else if (second == -1) {
                    second = i;
                } else {
                    return false;
                }
            }
        }
        
        // Step 5
        if (first != -1 && second != -1) {
            swap(s[first], s[second]);
            return s == goal;
        }
        
        return false;
    }
};
